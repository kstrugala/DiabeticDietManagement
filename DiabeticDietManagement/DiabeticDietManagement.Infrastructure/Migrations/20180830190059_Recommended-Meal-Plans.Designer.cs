// <auto-generated />
using System;
using DiabeticDietManagement.Infrastructure.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DiabeticDietManagement.Infrastructure.Migrations
{
    [DbContext(typeof(DiabeticDietContext))]
    [Migration("20180830190059_Recommended-Meal-Plans")]
    partial class RecommendedMealPlans
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DiabeticDietManagement.Core.Domain.DailyMealPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("BreakfastId");

                    b.Property<long>("Day");

                    b.Property<Guid?>("DinnerId");

                    b.Property<Guid?>("LunchId");

                    b.Property<Guid?>("RecommendedMealPlanId");

                    b.Property<Guid?>("SnapId");

                    b.Property<Guid?>("SupperId");

                    b.HasKey("Id");

                    b.HasIndex("BreakfastId");

                    b.HasIndex("DinnerId");

                    b.HasIndex("LunchId");

                    b.HasIndex("RecommendedMealPlanId");

                    b.HasIndex("SnapId");

                    b.HasIndex("SupperId");

                    b.ToTable("DailyMealPlan");
                });

            modelBuilder.Entity("DiabeticDietManagement.Core.Domain.Meal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Meal");
                });

            modelBuilder.Entity("DiabeticDietManagement.Core.Domain.Portion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("MealId");

                    b.Property<Guid>("ProductId");

                    b.Property<long>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("MealId");

                    b.ToTable("Portion");
                });

            modelBuilder.Entity("DiabeticDietManagement.Core.Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("Carbohydrates");

                    b.Property<long>("GlycemicIndex");

                    b.Property<long>("GlycemicLoad");

                    b.Property<string>("ProductName");

                    b.Property<long>("ServeSize");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DiabeticDietManagement.Core.Domain.RecommendedMealPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("DoctorId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("RecommendedMealPlans");
                });

            modelBuilder.Entity("DiabeticDietManagement.Core.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DiabeticDietManagement.Core.Domain.DailyMealPlan", b =>
                {
                    b.HasOne("DiabeticDietManagement.Core.Domain.Meal", "Breakfast")
                        .WithMany()
                        .HasForeignKey("BreakfastId");

                    b.HasOne("DiabeticDietManagement.Core.Domain.Meal", "Dinner")
                        .WithMany()
                        .HasForeignKey("DinnerId");

                    b.HasOne("DiabeticDietManagement.Core.Domain.Meal", "Lunch")
                        .WithMany()
                        .HasForeignKey("LunchId");

                    b.HasOne("DiabeticDietManagement.Core.Domain.RecommendedMealPlan")
                        .WithMany("DailyMealPlans")
                        .HasForeignKey("RecommendedMealPlanId");

                    b.HasOne("DiabeticDietManagement.Core.Domain.Meal", "Snap")
                        .WithMany()
                        .HasForeignKey("SnapId");

                    b.HasOne("DiabeticDietManagement.Core.Domain.Meal", "Supper")
                        .WithMany()
                        .HasForeignKey("SupperId");
                });

            modelBuilder.Entity("DiabeticDietManagement.Core.Domain.Portion", b =>
                {
                    b.HasOne("DiabeticDietManagement.Core.Domain.Meal")
                        .WithMany("Portions")
                        .HasForeignKey("MealId");
                });
#pragma warning restore 612, 618
        }
    }
}
